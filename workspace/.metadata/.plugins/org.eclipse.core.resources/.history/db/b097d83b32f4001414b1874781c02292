package net.lib.frame.window;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.util.ArrayList;

import javax.swing.JPanel;


public class Content extends JPanel{
	/**
	 *
	 */
	private static final long serialVersionUID = -706790674959951203L;
	String s = "";
	ArrayList<String> strings = new ArrayList<String>();
	int x = 0;
	int y = 0;
	Font f = null;
	Color c = null;
	public Content(Window w){
		setSize(w.getWidth(), w.getHeight());
		setVisible(true);
	}
	public void drawText(String s, int x, int y){
		this.x = x;
		this.y = y;
		this.s = s;
		strings.add(s);
		repaint();


	}
	public void moveText(final String s, final int x2, final int y2, final int speed){
		if(strings.contains(s)){
			Thread t = new Thread(new Runnable() {



				@Override
				public void run() {
					int newX = 0;
					if(x2 > x){
						newX = x2-x;
					}
					else if(x2 < x){
						newX = x-x2;

					}
					int newY = 0;
					if(y2 > y){
						newY = y2-y;
					}
					else if(y2 < y){
						newY = y-y2;

					}


					for(int x3 = x; x3 < newX; x3++){
						x = x + 1;

						try {
							Thread.sleep(speed);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
						repaint();

					}
					for(int y3 = y; y3 < newY; y3++){
						y = y + 1;
						try {
							Thread.sleep(speed);
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
						repaint();

					}

				}
			});
			t.start();
		}

	}
	public int getXText(String s){
		if(strings.contains(s)){
			return x;
		}
		return 0;

	}
	public int getYText(String s){
		if(strings.contains(s)){
			return y;
		}
		return 0;

	}
	public void setFont(Font f){
		this.f = f;
	}
	public void setColor(Color c){
		this.c = c;
	}

	@Override
	public void paint(Graphics g) {
		super.paint(g);
		if(f != null){
			g.setFont(f);
		}
		if(c != null){
			g.setColor(c);
		}
		g.drawString(s, x, y);
	}




}
